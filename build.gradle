buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.7.RELEASE")
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.8.14"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'docker-compose'

jar {
    baseName = 'chat1'
    version =  '0.0.1'
}

war {
    baseName = 'ROOT'
}

repositories {
    mavenCentral()
}

dependencies {
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework:spring-messaging")
    //
    compile("org.springframework.boot:spring-boot-starter-actuator")
    runtime("io.micrometer:micrometer-registry-prometheus")
    //
    compile 'io.prometheus.jmx:jmx_prometheus_javaagent:0.12.0'
    compile 'io.prometheus:simpleclient_httpserver:0.6.0'
    compile 'io.prometheus:simpleclient:0.6.0'
    //
    testCompile("junit:junit")
    testCompile 'com.codeborne:selenide:5.2.8'
}

task copyLibs(type: Copy) {
    from configurations.compile
    include "jmx*"
    into "$buildDir/libs"
}

//dockerCompose.isRequiredBy(test)

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
    removeContainers = true
    forceRecreate = true
    captureContainersOutput = true
    removeImages = "None"
    dockerComposeWorkingDirectory = '.'
}

build.dependsOn(copyLibs)